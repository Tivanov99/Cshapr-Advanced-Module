using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace StacksAndQueues
{
    class Program
    {
        static void Main(string[] args)
        {
            Stack<string> Stack = new Stack<string>();
            string sb = "";
            int count = int.Parse(Console.ReadLine());

            for (int i = 0; i < count; i++)
            {
                string[] comands = Console.ReadLine().Split();
                if (comands[0] == "1")
                {
                    sb += (comands[1]);
                    Stack.Push(sb);
                }
                else if (comands[0] == "2")
                {
                    int CountOfRemoved = int.Parse(comands[1]);
                    if (CountOfRemoved > 0 && sb.Length > 0)
                    {
                        if (CountOfRemoved >= sb.Length)
                        {
                            sb = string.Empty;
                        }
                        else
                        {
                            sb.Remove((sb.Length - CountOfRemoved) - 1, CountOfRemoved);
                        }
                        Stack.Push(sb.ToString());
                    }
                }
                else if (comands[0] == "3")
                {
                    int index = int.Parse(comands[1]);
                    if (index >= 0 && index <= sb.Length)
                    {
                        if (index == 0)
                        {
                            Console.WriteLine(sb[0]);
                        }
                        else
                        {
                            Console.WriteLine(sb[index - 1]);
                        }
                    }
                }
                else if (comands[0] == "4")
                {
                    if (Stack.Count > 0)
                    {
                        Stack.Pop();
                        if (Stack.Count > 0)
                        {
                            sb = Stack.Peek();
                        }
                        else
                        {
                            sb = string.Empty;
                        }
                    }
                }
            }
        }
    }
}
