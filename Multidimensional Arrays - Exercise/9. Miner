using System;
using System.Linq;
using System.Text;

namespace ExerciseArrays
{
    class Program
    {
        static void Main(string[] args)
        {
            int size = int.Parse(Console.ReadLine());
            string[] comands = Console.ReadLine().Split(' ');
            if (size >= 1 && comands.Length>=1)
            {
                int[] position = new int[2];
                //at 0 is Rows
                //at 1 is Col
                char[,] matrix = new char[size, size];
                int totalCoalCount = 0;
                for (int rows = 0; rows < size; rows++)
                {
                    char[] input = Console.ReadLine().Split(' ').Select(char.Parse).ToArray();
                    for (int cols = 0; cols < size; cols++)
                    {
                        if (input[cols] == 's')
                        {
                            position[0] = rows;
                            position[1] = cols;
                        }
                        else if (input[cols] == 'c')
                        {
                            totalCoalCount++;
                        }
                        matrix[rows, cols] = input[cols];
                    }
                }
                int coalcount = 0;
                bool isFindEnd = false;
                bool IsEnd = true;
                bool AlreadyCollect = false;
                for (int i = 0; i < comands.Length; i++)
                {
                    if (isFindEnd)
                    {
                        IsEnd = false;
                        break;
                    }
                    else if (totalCoalCount == 0)
                    {
                        IsEnd = false;
                        AlreadyCollect = true;
                        break;
                    }
                    else if (comands[i] == "up")
                    {
                        if (position[0] - 1 < size)
                        {
                            position[0] = position[0] - 1;
                            if (matrix[position[0], position[1]] == 'c')
                            {
                                matrix[position[0], position[1]] = '*';
                                totalCoalCount--;
                                coalcount++;
                            }
                            else if (matrix[position[0], position[1]] == 'e')
                            {
                                matrix[position[0], position[1]] = '*';
                                isFindEnd = true;
                            }
                            matrix[position[0], position[1]] = 's';
                        }
                    }
                    else if (comands[i] == "down")
                    {
                        if (position[0] + 1 >= 0)
                        {
                            position[0] = position[0] + 1;
                            if (matrix[position[0], position[1]] == 'c')
                            {
                                matrix[position[0], position[1]] = '*';
                                totalCoalCount--;
                                coalcount++;
                            }
                            else if (matrix[position[0], position[1]] == 'e')
                            {
                                matrix[position[0], position[1]] = '*';
                                isFindEnd = true;
                            }
                            matrix[position[0], position[1]] = 's';
                        }
                    }
                    else if (comands[i] == "right")
                    {
                        if (position[1] + 1 < size)
                        {
                            position[1] = position[1] + 1;
                            if (matrix[position[0], position[1]] == 'c')
                            {
                                matrix[position[0], position[1]] = '*';
                                totalCoalCount--;
                                coalcount++;
                            }
                            else if (matrix[position[0], position[1]] == 'e')
                            {
                                matrix[position[0], position[1]] = '*';
                                isFindEnd = true;
                            }
                            matrix[position[0], position[1]] = 's';
                        }
                    }
                    else if (comands[i] == "left")
                    {
                        if (position[1] - 1 >= 0)
                        {
                            position[1] = position[1] - 1;
                            if (matrix[position[0], position[1]] == 'c')
                            {
                                matrix[position[0], position[1]] = '*';
                                totalCoalCount--;
                                coalcount++;
                            }
                            else if (matrix[position[0], position[1]] == 'e')
                            {
                                matrix[position[0], position[1]] = '*';
                                isFindEnd = true;
                            }
                            matrix[position[0], position[1]] = 's';
                        }
                    }
                }
                if (AlreadyCollect || totalCoalCount == 0)
                {
                    Console.WriteLine($"You collected all coals! ({position[0]}, {position[1]})");
                }
                else if (isFindEnd)
                {
                    Console.WriteLine($"Game over! ({position[0]}, {position[1]})");
                }
                else if (IsEnd)
                {
                    Console.WriteLine($"{totalCoalCount} coals left. ({position[0]}, {position[1]})");
                }
            }
        }
    }
}
